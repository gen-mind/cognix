name: Build embedder service

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# on:
#   push:
#     tags:
#       - '*'
on:
  push:
    branches:
      - main
    paths:
      - 'src/backend/embedder/**'
      - '.github/workflows/embedder-build.yml'
  
env:
  # Use docker.io for Docker Hub if empty
  #REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  #IMAGE_NAME: ${{ github.repository }}
  RGNAME: AKS_RG
  ACRNAME: cognixacr
  AKSNAME: Cognix_AKS  
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACRNAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Embedder Service Image Docker Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ./src/backend/embedder
        file: ./src/backend/embedder/Dockerfile_cpu
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.ACRNAME }}.azurecr.io/cognix/embedder:${{env.GITHUB_SHA}}
        build-args: |
          COGNIX_VERSION=${{env.GITHUB_SHA}}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS kubeconfig
      run: az aks get-credentials --resource-group $RGNAME --name $AKSNAME

    - name: Update Embedder server manifest
      run:
        sed -ie "s/embedder:main/embedder:${{env.GITHUB_SHA}}/g" ./src/backend/embedder/embedder-deployment.yaml

    - name: Deploy Embedder server manifests
      run: |
        kubectl apply -f ./src/backend/embedder/embedder-deployment.yaml

    - name: Delete Embedder server pod
      run: |
        kubectl rollout restart deploy/embedder
